---
export const prerender = false;

import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import { Upload, SendHorizonal, Trash2 } from 'lucide-react';

import DefaultLayout from '@/layouts/DefaultLayout.astro';
import { ChatContainer } from '@/components/Chat/ChatContainer';
import { buttonVariants } from '@/components/ui/button';
import { UploadedFile } from '@/components/Chat/UploadedFile';
import { ChatInput } from '@/components/Chat/ChatInput';
import { ChatPage } from '@/components/Chat/ChatPage';

const channelTitle = Astro.url.pathname.replace('/dashboard/chats/', '');
---

<DefaultLayout title={channelTitle} className=''>
	<ChatPage client:only='react' />
	<!-- <div class='container'>
		<ChatContainer />
		<ChatInput client:load />

		<div class='uploaded-files-container flex rounded-lg border border-border p-2 gap-x-4'>
			<UploadedFile client:load />
		</div>
	</div> -->
</DefaultLayout>

<!-- <script>
	let files: File[] = [];

	function handleFileChange(event: Event) {
		const input = event.target as HTMLInputElement;
		const file = input.files ? input.files[0] : null;
		if (!input.files) return;
		if (!file) return;

		[...(input.files as FileList)].forEach((file, i) => {
			files.push(file);
			console.log(`${i}: ${document.querySelector('.uploaded-files-container')}`);

			const previewContainer = document.querySelector('.uploaded-files-container') ?? document.createElement('div');
			previewContainer.className = 'uploaded-files-container flex rounded-lg border border-border p-4 gap-x-4';

			const inputContainer = document.querySelector('.input-container');
			if (inputContainer) {
				document.querySelector('.container')?.insertBefore(previewContainer, inputContainer);
			}

			const reader = new FileReader();
			reader.onload = function (e) {
				const previewImage = document.createElement('img');
				previewImage.src = e.target?.result as string;
				previewImage.alt = file.name;
				previewImage.className = 'rounded-lg max-h-32 min-h-32 aspect-square';

				previewContainer.appendChild(previewImage);
			};

			reader.readAsDataURL(file);
		});
		input.value = '';

		console.log(files);
	}

	const fileInput: HTMLInputElement | null = document.querySelector('input[file-input]');
	fileInput?.addEventListener('change', handleFileChange);
</script> -->

<!-- <style lang='scss'>
	.container {
		display: grid;
		grid-template-columns: auto;
		grid-template-rows: 24fr 1fr;
		max-height: calc(100vh - 4rem - 2rem);
		width: 100%;
		row-gap: 1rem;
	}
</style> -->
